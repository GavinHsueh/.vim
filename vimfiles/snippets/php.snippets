snippet html
	<!DOCTYPE html>
	<html>
	<head>
	<meta charset=utf-8" />
	<title>${1:webtitle}</title>
	<meta name="keywords" content="" />
	<meta name="description" content="" />
	</head>
	<body>
	${2}
	</body>
	</html>
# PHP Set
snippet php
	<?php ${1}?>
snippet echo
	echo "${1:string}";${2}
snippet utf-8
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />${1}
snippet include
	include '${1:file}';${2}
snippet include1
	include_once '${1:file}';${2}
snippet require
	require '${1:file}';${2}
snippet require1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet COOKIE
	$_COOKIE['${1:variable}']${2}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet FILES
	$_FILES['${1:variable}']${2}
snippet GET
	$_GET['${1:variable}']${2}
snippet POST
	$_POST['${1:variable}']${2}
snippet REQUEST
	$_REQUEST['${1:variable}']${2}
snippet SERVER
	$_SERVER['${1:variable}']${2}
snippet SESSION
	$_SESSION['${1:variable}']${2}
snippet this
	$this->${1}
snippet smarty
	$smarty->${1}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:}
	{${6}
	} // END $1class $2
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:}
	{${5}
	} // END interface $1
# class ...
snippet class
	class ${1:ClassName}
	{
		${2}
	}
snippet construct
	function __construct(${1:argument})
	{
		${2}
	}
# define(...)
snippet define
	define('${1}', ${2});${3}
# defined(...)
snippet defined
	${1}defined('${2}')${3}
snippet while
	while (${1:/* condition */})
	{
		${2}
	}
# do ... while
snippet do
	do
	{
		${2}
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */})
	{
		${2}
	}
snippet ifelse
	if (${1:/* condition */})
	{
		${2}
	}
	else
	{
		${3}
	}
snippet else
	else
	{
		${1}
	}
snippet elseif
	elseif
	(${1:/* condition */}) {
		${2}
	}
# Tertiary conditional
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable})
	{
		case '${2:value}':
			${3}
			break;
		
		default:
		
			break;
	}
snippet case
	case '${1:value}':
		${2}
		break;
	
snippet for
	for ($${1:i} = ${2:0}; $$1 < ${3:count}; $$1${4:++})
	{
		${5}
	}
snippet foreach
	foreach ($${1:variable} as $${2:key})
	{
		${3}
	}
snippet fun
	${1:public }function ${2:FunctionName}(${3})
	{	
		${4}
	}
snippet function
	function ${1:FunctionName}(${2})
	{	
		${3}
	}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}

# ZUI框架
snippet zui:load
	<!-- ZUI 标准版压缩后的 CSS 文件 -->
	<link rel="stylesheet" href="//cdn.bootcss.com/zui/1.5.0/css/zui.min.css">
	<!-- ZUI Javascript 依赖 jQuery -->
	<script src="//cdn.bootcss.com/zui/1.5.0/lib/jquery/jquery.js"></script>
	<!-- ZUI 标准版压缩后的 JavaScript 文件 -->
	<script src="//cdn.bootcss.com/zui/1.5.0/js/zui.min.js"></script>
snippet zui:container
	<div class="container">
	  ${1}
	</div>
snippet zui:container-fluid
	<div class="container-fluid">
	  ${1}
	</div>
snippet zui:icon
	<i class="icon icon-${1}"></i>${2}
snippet zui:button
	<button class="btn btn-${1}">${2}</button>${3}
snippet zui:button:a
	<a class="btn btn-${1:primary}" href="${2:link}">${3}</a>
snippet zui:input
	<input type="${1:text}" name="${2}"class="form-control" placeholder="${3:defaultView}"/>${4}
snippet zui:textarea
	<textarea name="${1}" class="form-control" rows="${2}" placeholder="defaultView"></textarea>${3}
snippet zui:select
	<select name="${1}" class="form-control">
		<option value="${2}">${3}</option>
	</select>
snippet zui:checkbox
	<div class="checkbox">
		<label>
			<input type="checkbox" name="${1}" value="${2}">${3}
		</label>
	</div>
snippet zui:radio
	<div class="radio">
		<label>
			<input type="radio" name="${1}" value="${2}">${3}
		</label>
	</div>
snippet zui:checkbox-inline
	<label class="checkbox-inline">
		<input type="checkbox" name="${1}" value="${2}">${3}
	</label>
snippet zui:radio-inline
	<label class="radio-inline">
		<input type="radio" name="${1}" value="${2}">${3}
	</label>
snippet zui:breadcrumb
	<ol class="breadcrumb">
		<li><a href="${1}">${2}</a></li>
		<li class="active"></li>
	</ol>
snippet zui:alert-dismissable
	<div class="alert alert-${1:warning} alert-dismissable">
		<button type="button" class="close" data-dismiss="alert" aria-hidden="true"><i class="icon-remove"></i></button>
		<p>${2}</p>
	</div>
snippet zui:input-group
	<div class="input-group">
		<span class="input-group-addon">${1}</span>
		<input type="${2:text}" name="${3}" class="form-control" placeholder="${4}" />
	</div>
snippet zui:list-group
	<div class="list-group">
		<a href="${2:#}" class="list-group-item">${1}</a>
	</div>
snippet zui:nav
	<ul class="nav nav-${1:primary/secondary/tabs/pills/} ${2:nav-stacked} ${3:nav-justified}">
		<li class="active"><a href="#"></a></li>
		<li><a href="#"></a></li>
	</ul>
snippet zui:navbar
	<nav class="navbar navbar-${1:default/inverse}" role="navigation">
		<div class="container">
			<div class="collapse navbar-collapse">
			${2}
			</div>
		</div>
	</nav>
snippet zui:menu
	<nav class="menu" data-toggle="menu" style="width:${1:200px}">
		<ul class="nav nav-primary">
			<li><a href="#"></a></li>
			<li class="nav-parent">
				<a href="#"></a>
				<ul class="nav">
					<li><a href="#"></a></li>
				</ul>
			</li>
		</ul>
	</nav>

# ZentaoPHP框架:
snippet ,,
	$this->view->${1:varName}
snippet ..
	->${1}
snippet assign
	$this->assign("${1:varName}",${2:varValue});
snippet createLink
	$this->createLink("${1:moduleName}","${2:funName}","${3:key1=value1&key2=value2}")${4}
snippet inlink
	$this->inlink("${1:funName}","${2:key1=value1&key2=value2}")${3}
snippet dao
	$this->dao->${1}
snippet post
	$this->post->${1}
snippet get
	$this->get->${1}
snippet server
	$this->server->${1}
snippet session
	$this->session->${1}
snippet cookie
	$this->cookie->${1}
snippet global
	$this->global->${1}
snippet select
	$this->dao->select('${1:*}')->from('${2:tableName}')->${3}
snippet where
	where('${1:who}')->${2}
snippet andWhere
	andWhere('${1:who}')->${2}
snippet orWhere
	orWhere('${1:who}')->${2}
snippet eq
	eq(${1:how})->${2}
snippet gt
	gt(${1:how})->${2}
snippet lt
	lt(${1:how})->${2}
snippet fetch
	fetch();${1}
snippet fetchAll
	fetchAll();${1}
snippet orderBy
	orderBy('${1}')->${2}
snippet limit
	limit('${1}')->${2}
snippet insert
	$this->dao->insert('${1:tableName}')->data($${2:objName})->exec();${3}
snippet delete
	$this->dao->delete()->from('${1:tableName}')->where('${2:who}')->eq('${3:how}')->exec();${4}
snippet update
	$this->dao->update('${1:tableName}')->data($${2:objName})->where('${3:who}')->eq('${4:how}')->exec();${5}
snippet query
	$this->dao->query('${1:$sql}');

snippet html::title
	html::title(${1:$title});
snippet html::meta
	html::meta(${1:$name},${2:$value});
snippet html::favicon
	html::favicon(${1:$url});
snippet html::icon
	html::icon(${1:$name}, ${2:$class=''});
snippet html::rss
	html::rss(${1:$url},${2:$title});
snippet html::a
	html::a(${1:$href}, ${2:$title}, ${3:$attr});
snippet html::mailto
	html::mailto(${1:$mail},${2:$title});
snippet html::select
	html::select(${1:$name},${2:$options},${3:$selected},${4:$attr});
snippet html::selectGroup
	html::selectGroup(${1:$name},${2:$group},${3:$selected},${4:$attr});
snippet html::radio
	html::radio(${1:$name},${2:$options},${3:$checked},${4:$attr});
snippet html::checkbox
	html::checkbox(${1:$name},${2:$options},${3:$checked},${4:$attr});
snippet html::text
	html::input(${1:$name},${2:$value},${3:$attr});
snippet html::hidden
	html::hidden(${1:$name},${2:$value},${3:$attr});
snippet html::password
	html::password(${1:$name},${2:$value},${3:$attr});
snippet html::textarea
	html::textarea(${1:$name},${2:$value},${3:$attr});
snippet html::file
	html::file(${1:$name},${2:$attr});
snippet html::img
	html::image(${1:$src},${2:$attr});
snippet html::submit
	html::submitButton(${1:$label},${2:'btn btn-primary'},${3:$attr});
snippet html::reset
	html::resetButton(${1:$label},${2:class=''});
snippet html::back
	html::backButton(${1:$label},${2:$attr},${3:class=''});
snippet html::button
	html::commonButton(${1:$label}, ${2:'btn btn-default'}, ${3:$attr});
snippet html::linkButton
	html::linkButton(${1:$label},${2:$link},${3:'btn btn-default'},${4:$attr});
snippet html::closeButton
	html::closeButton();
snippet html::selectButton
	html::selectButton(${1:$scope=''});

snippet css::import
	css::import(${1:$url},${2:$version});
snippet css::style
	css::internal(${1:$css});

snippet js::import
	js::import(${1:$url});
snippet js::start
	js::start();
snippet js::end
	js::end();
snippet js::alert
	js::alert(${1:$message});
snippet js::error
	js::error(${1:$message});
snippet js::confirm
	js::confirm(${1:$message},${2:$okURL},${3:$cancelURL});
snippet js::locate
	js::locate(${1:$url});
snippet js::closeWindow
	js::closeWindow();
snippet js::refresh
	js::refresh(${1:$url},${2:$target='self'},${3:$time=3000});
snippet js::reload
	js::reload(${1:$window});
snippet js::exportConfigVars
	js::exportConfigVars();
snippet js::execute
	js::execute(${1:$code});

# 字符串处理函数
snippet strpos
	strpos(${1:$string}, ${2:$str})${3}
snippet substr
	substr(${1:$string}, ${2:$start}, ${3:$length})${4}
snippet str_replace
	str_replace(${1:$oldstr}, ${2:$newstr}, ${3:$string})${4}
snippet substr_replace
	substr_replace(${1:$string}, ${2:$newstr}, ${3:$start}, ${4:[length]})${5}
